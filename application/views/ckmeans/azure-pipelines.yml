# Create and test a Python package on multiple Python versions.

trigger:
- master

strategy:
  matrix:
    Linux_Python36:
      IMAGE_NAME: 'ubuntu-16.04'
      PYTHON_VERSION: '3.6'
    Linux_Python37:
      IMAGE_NAME: 'ubuntu-16.04'
      PYTHON_VERSION: '3.7'
    Linux_Python38:
      IMAGE_NAME: 'ubuntu-16.04'
      PYTHON_VERSION: '3.8'
    Linux_Python39:
      IMAGE_NAME: 'ubuntu-16.04'
      PYTHON_VERSION: '3.9'
    Windows_Python36:
      IMAGE_NAME: 'vs2017-win2016'
      PYTHON_VERSION: '3.6'
    Windows_Python37:
      IMAGE_NAME: 'vs2017-win2016'
      PYTHON_VERSION: '3.7'
    Windows_Python38:
      IMAGE_NAME: 'vs2017-win2016'
      PYTHON_VERSION: '3.8'
    Windows_Python39:
      IMAGE_NAME: 'vs2017-win2016'
      PYTHON_VERSION: '3.9'
    MacOS_Python36:
      IMAGE_NAME: 'macos-10.14'
      PYTHON_VERSION: '3.6'
    MacOS_Python37:
      IMAGE_NAME: 'macos-10.14'
      PYTHON_VERSION: '3.7'
    MacOS_Python38:
      IMAGE_NAME: 'macos-10.14'
      PYTHON_VERSION: '3.8'
    MacOS_Python39:
      IMAGE_NAME: 'macos-10.14'
      PYTHON_VERSION: '3.9'

pool:
  vmImage: $(IMAGE_NAME)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(PYTHON_VERSION)'
  displayName: 'Use Python $(PYTHON_VERSION)'

- script: |
    python -m pip install --upgrade pip setuptools wheel twine
  displayName: 'Install dependencies'

- script: |
    python setup.py build bdist_wheel sdist
  displayName: 'build wheel and sdist'

# Publish pipeline artifacts
# Publish (upload) a file or directory as a named artifact for the current run
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: 'dist'

# Test wheel
# Use bash for all platforms including Windows
- bash: |
    cd $(mktemp -d)  # change to tempory directory
    pip install $(System.DefaultWorkingDirectory)/dist/*.tar.gz
    pip install -r $(System.DefaultWorkingDirectory)/requirements-dev.txt
    pytest $(System.DefaultWorkingDirectory)/tests
    pip uninstall -y k-means-constrained
  displayName: 'Install wheel and test'

# Test source distribution (sdist)
# Use bash for all platforms including Windows
- bash: |
    cd $(mktemp -d)  # change to tempory directory
    pip install $(System.DefaultWorkingDirectory)/dist/*.tar.gz
    pip install -r $(System.DefaultWorkingDirectory)/requirements-dev.txt
    pytest $(System.DefaultWorkingDirectory)/tests
    pip uninstall -y k-means-constrained
  displayName: 'Compile sdist, install and test'





